{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Node Express Template -> (NET.ts) ",
    "description": "Node.js NET.ts RESTful API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "basePath": "/",
  "schemes": ["http", "https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/api/dapp-analytics/dapp": {
      "post": {
        "tags": ["DApp Management"],
        "summary": "Save a new DApp",
        "description": "This endpoint saves a new DApp based on the given data.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "dapp",
            "description": "DApp data to save",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DAppData"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "DApp added successfully"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/dapp-analytics/dapp/all": {
      "get": {
        "tags": ["DApp Management"],
        "summary": "Get all DApps",
        "description": "Retrieve all DApps from the system.",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A list of DApps",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DApp"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/dapp-analytics/dapp/{id}": {
      "get": {
        "tags": ["DApp Management"],
        "summary": "Get a DApp by ID",
        "description": "Retrieve a single DApp by its ID.",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the DApp to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "A single DApp",
            "schema": {
              "$ref": "#/definitions/DApp"
            }
          },
          "404": {
            "description": "DApp not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "tags": ["DApp Management"],
        "summary": "Update a DApp by ID",
        "description": "Update data for an existing DApp.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the DApp to update"
          },
          {
            "in": "body",
            "name": "dapp",
            "description": "DApp data to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DAppData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "DApp updated successfully"
          },
          "404": {
            "description": "DApp not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/dapp-analytics/units": {
      "get": {
        "summary": "Get Dapp Units",
        "description": "Retrieve units for dapp analytics.",
        "tags": ["Dapp Analytics"],
        "responses": {
          "200": {
            "description": "Units read",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Units read"
                    },
                    "output": {
                      "type": "object",
                      "properties": {
                        "units": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "Wallets",
                            "Transferred tokens",
                            "Number of interactions"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dapp-analytics/dapp/{id}/abi/events": {
      "get": {
        "summary": "Get Dapp ABI Events",
        "description": "Retrieve events from the dapp ABI.",
        "tags": ["Dapp Analytics"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The ID of the dapp"
          }
        ],
        "responses": {
          "200": {
            "description": "Dapp ABI events retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string"
                        },
                        "args": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "label": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "docs": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid UUID"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No dApps found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No dApps found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Failed to connect to backend service"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dapp-analytics/dapp/{id}/abi/calls": {
      "get": {
        "summary": "Get Dapp ABI Calls",
        "description": "Retrieve calls from the dapp ABI.",
        "tags": ["Dapp Analytics"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The ID of the dapp"
          }
        ],
        "responses": {
          "200": {
            "description": "Dapp ABI functions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string"
                        },
                        "args": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "label": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "selector": {
                          "type": "string"
                        },
                        "mutates": {
                          "type": "boolean"
                        },
                        "payable": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid UUID"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No dApps found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No dApps found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Failed to connect to backend service"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/blockchain/all": {
      "get": {
        "tags": ["Blockchains"],
        "summary": "Get all blockchains",
        "description": "Retrieve all blockchains from the system.",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "active",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": true,
            "description": "Filter blockchains by active status"
          },
          {
            "name": "growthindex",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Filter blockchains by growth index"
          },
          {
            "name": "dappgrowth",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Filter blockchains by DApp growth"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of blockchains",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Blockchain"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/blockchain/{slug}": {
      "get": {
        "tags": ["Blockchains"],
        "summary": "Get a blockchain by slug",
        "description": "Retrieve a single blockchain by its slug.",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Slug of the blockchain to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "A single blockchain",
            "schema": {
              "$ref": "#/definitions/Blockchain"
            }
          },
          "404": {
            "description": "Blockchain not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/health": {
      "get": {
        "tags": ["healthcheck"],
        "summary": "Application service health check 💗",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user": {
      "post": {
        "tags": ["create user"],
        "description": "Create user",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "default": "Provide API-key (ie. API_KEY_TOKEN from .localhost.env file)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Input",
            "in": "body",
            "description": "Input data required to create new user",
            "schema": {
              "$ref": "#/definitions/UserInput"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "User has been created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/ResponseWithMessage"
                }
              }
            }
          },
          "401": {
            "description": "Access forbidden. Incorrect x-api-key!",
            "error": {}
          },
          "500": {
            "description": "Internal Server Error",
            "message": {}
          }
        },
        "security": [
          {
            "api_key": "$X_API_KEY"
          }
        ]
      }
    },
    "/api/database-info/databases": {
      "get": {
        "tags": ["Database Data"],
        "summary": "Get all databases",
        "responses": {
          "200": {
            "description": "List of databases"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/database-info/schemas": {
      "get": {
        "tags": ["Database Data"],
        "summary": "Get all schemas",
        "responses": {
          "200": {
            "description": "List of schemas"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/database-info/tables": {
      "get": {
        "tags": ["Database Data"],
        "summary": "Get all tables",
        "responses": {
          "200": {
            "description": "List of tables"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/database-info/tables/{schemaName}/{tableName}/columns": {
      "get": {
        "tags": ["Database Data"],
        "summary": "Get columns for a given table",
        "parameters": [
          {
            "name": "schemaName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of columns for the specified table"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/database-info/generate-chart-data/{schema}/{table}": {
      "post": {
        "tags": ["Database Data"],
        "summary": "Generate chart data for a given schema and table",
        "parameters": [
          {
            "name": "schema",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "table",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "dimension": { "type": "string" },
                "measures": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "columnName": { "type": "string" },
                      "operator": { "type": "string" }
                    }
                  }
                },
                "differential": { "type": "string" },
                "filters": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              },
              "required": ["dimension"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chart data generated successfully"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "DAppData": {
      "type": "object",
      "required": ["name", "blockchain", "abis"],
      "properties": {
        "name": {
          "type": "string"
        },
        "logo": {
          "type": "string"
        },
        "blockchain": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "fromBlock": {
          "type": "integer",
          "format": "int64"
        },
        "addedBy": {
          "type": "string"
        },
        "abis": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "abi": {
                "type": "object"
              }
            },
            "required": ["name", "address", "abi"]
          }
        }
      }
    },
    "DApp": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "blockchain": {
          "type": "string"
        },
        "logo": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "fromBlock": {
          "type": "integer",
          "format": "int64"
        },
        "addedBy": {
          "type": "string"
        },
        "abis": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "abi": {
                "type": "object"
              }
            },
            "required": ["name", "address", "abi"]
          }
        }
      }
    },
    "Blockchain": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the blockchain"
        },
        "name": {
          "type": "string",
          "description": "Name of the blockchain"
        },
        "active": {
          "type": "boolean",
          "description": "Active status of the blockchain"
        },
        "dapp_growth_index": {
          "type": "boolean",
          "description": "DApp growth index of the blockchain"
        },
        "defi_growth_index": {
          "type": "boolean",
          "description": "DeFi growth index of the blockchain"
        },
        "icon": {
          "type": "string",
          "description": "Icon URL of the blockchain"
        },
        "slug": {
          "type": "string",
          "description": "Slug of the blockchain"
        }
      },
      "DappAbiEvent": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              }
            }
          },
          "docs": {
            "type": "string"
          }
        }
      },
      "DappAbiFunction": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              }
            }
          },
          "selector": {
            "type": "string"
          },
          "mutates": {
            "type": "boolean"
          },
          "payable": {
            "type": "boolean"
          }
        }
      }
    },
    "Input": {
      "required": ["input"],
      "properties": {
        "input": {
          "type": "object",
          "$ref": "#/definitions/InputBody"
        }
      }
    },
    "UserInput": {
      "required": ["name", "email"],
      "properties": {
        "name": {
          "type": "string",
          "default": "John Doe"
        },
        "email": {
          "type": "string",
          "default": "john.d@example.net"
        }
      }
    },
    "ResponseWithMessage": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "x-api-key": {
      "type": "apiKey",
      "name": "x-api-key",
      "in": "header"
    }
  }
}
